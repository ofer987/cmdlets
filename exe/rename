#!/usr/bin/env ruby
# frozen_string_literal: true

require 'curses'

class Terminal
  WIDTH = 50

  def terminal_message
    message.join("\n")
  end

  def initialize
    @message = []
  end

  def show_message(line)
    win = generate_window

    @message = [line]
    win.addstr(message.join("\n"))
    win.refresh
  ensure
    win.close
  end

  def add_char(char)
    win = generate_window

    message[-1] << char.to_s

    win.addstr(message.join("\n"))
    win.refresh
  ensure
    win.close
  end

  def add_line(line)
    win = generate_window

    message << line
    win.addstr(message.join("\n"))
    win.refresh
  ensure
    win.close
  end

  private

  def generate_window
    height  = 5
    width   = WIDTH
    top     = 0
    left    = 0

    Curses::Window.new(height, width, top, left)
  end

  attr_reader :message
end

# rubocop:disable Metrics/MethodLength
def delete_file(terminal, source)
  first_line = "Delete source file #{source} (y/N): "
  terminal.add_line(first_line)

  result = ''
  loop do
    char = Curses.get_char

    case char.ord
    when 10
      break
    else
      # Use a string, because we want the user to press Enter.
      # And then we examine the entire string whether it is equal to either
      # 'Y' or 'y'.
      # This is  a more intuitive experience
      result += char
      terminal.add_char(char)
    end
  end

  if result.downcase == 'y'
    File.delete(source)

    second_line = 'File deleted'
    terminal.add_line(second_line)
  end

  third_line = 'Press any key to exit'
  terminal.add_line(third_line)

  Curses.getch
rescue StandardError
  puts "error deleteing #{source}"

  exit 1
end
# rubocop:enable Metrics/MethodLength

def copy_file(terminal, source, destination)
  line = "Copying #{source} to #{destination}"
  terminal.add_line(line)

  contents = File.read(source)
  File.write(destination, contents)
rescue StandardError
  puts "error copying #{source} to #{destination}"

  exit 1
end

source = ARGV[0].to_s
destination = source

Curses.init_screen
Curses.crmode
Curses.setpos(0, 0)
Curses.addstr(source)

terminal = Terminal.new

begin
  loop do
    terminal.show_message(destination)

    letter = Curses.getch
    case letter.ord
    when 127, 8
      destination = destination[0..-2]
    when 2, 6, 1
      next
    when 10
      break
    else
      destination = "#{destination}#{letter}"
    end
  end

  copy_file(terminal, source, destination)
  delete_file(terminal, source)
ensure
  Curses.close_screen
end
